(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{717:function(t,s,a){"use strict";a.r(s);var e=a(6),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("表单提交")]),t._v(" "),a("p",[t._v("Ajax")]),t._v(" "),a("p",[t._v("什么是CORS？ 如何解决跨域问题？")]),t._v(" "),a("blockquote",[a("p",[t._v("前端发送http请求的几种方式")])]),t._v(" "),a("ol",[a("li",[t._v("采用JQuery的ajax")]),t._v(" "),a("li",[t._v("基于Promise实现的axios用于浏览器和node.js的HTTP客户端")]),t._v(" "),a("li",[t._v("fetch。基于Promise实现支持async和await")])]),t._v(" "),a("h2",{attrs:{id:"fetch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fetch"}},[t._v("#")]),t._v(" fetch")]),t._v(" "),a("p",[t._v("Fetch API 是近年来被提及将要取代 "),a("code",[t._v("XHR")]),t._v(" 的技术新标准，是一个 HTML5 的 API。")]),t._v(" "),a("p",[t._v("Fetch 是基于 Promise 语法结构，而且它的设计足够低阶，这表示它可以在实际需求中进行更多的弹性设计。对于 "),a("strong",[t._v("XHR")]),t._v(" 所提供的能力来说，Fetch 已经足够取代 "),a("code",[t._v("XHR")]),t._v(" ，并且提供了更多拓展的可能性。")]),t._v(" "),a("p",[t._v("可配合使用 ES2016 中的 "),a("code",[t._v("async")]),t._v(" / "),a("code",[t._v("await")]),t._v(" 语法，更加优雅。")]),t._v(" "),a("p",[a("strong",[t._v("基本使用")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./main.json'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("res")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("json")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("可以简单理解为，Fetch API 是面向未来的异步通信 API。")]),t._v(" "),a("p",[a("strong",[t._v("用法")])]),t._v(" "),a("p",[t._v("fetch 方法有两种调用方式。")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[t._v("Promise fetch(String url, [, Object options])\nPromise fetch(Request req, [, Object options])\n")])])]),a("ol",[a("li",[t._v("第一个参数是一个 "),a("code",[t._v("Request")]),t._v(" 对象，第二个参数是配置信息，可选")]),t._v(" "),a("li",[t._v("第一个参数是一个 "),a("code",[t._v("url")]),t._v("，第二个参数是配置信息，可选")])]),t._v(" "),a("p",[t._v("可选配置信息是一个 Object 对象，可以包含以下字段")]),t._v(" "),a("ul",[a("li",[t._v("method: 请求的方法，例如：GET, POST。")]),t._v(" "),a("li",[t._v("headers: 请求头部信息，可以是一个简单的对象，也可以是 Headers 类实例化的一个对象。")]),t._v(" "),a("li",[t._v("body: 需要发送的信息内容，可以是 Blob, BufferSource, FormData, URLSearchParams 或者 USVString。注意，GET, HEAD方法不能包含body。")]),t._v(" "),a("li",[t._v("mode: 请求模式，分别有"),a("code",[t._v("cors")]),t._v(", "),a("code",[t._v("no-cors")]),t._v(", same-origin, navigate 这几个可选值。\ncors: 允许跨域，要求响应中 Acess-Control-Allow-Origin 这样的头部表示允许跨域。\nno-cors: 只允许使用 HEAD, GET, POST方法。\nsame-origin: 只允许同源请求，否则直接报错。\nnavigate: 支持页面导航。")]),t._v(" "),a("li",[t._v("credentials: 表示是否发送cookie，有三个选项\nomit: 不发送cookie。\nsame-origin: 仅在同源时发送cookie。\ninclude: 发送cookie。")]),t._v(" "),a("li",[t._v("cache: 表示处理缓存的策略。")]),t._v(" "),a("li",[t._v("redirect: 表示发生重定向时，有三个选项\n"),a("ul",[a("li",[t._v("follow: 跟随。\nerror: 发生错误。\nmanual: 需要用户手动跟随。")])])]),t._v(" "),a("li",[t._v("integrity: 包含一个用于验证资资源完整性的字符串。")])]),t._v(" "),a("h3",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://aotu.io/notes/2017/04/10/fetch-API/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("凹凸实验室"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=n.exports}}]);